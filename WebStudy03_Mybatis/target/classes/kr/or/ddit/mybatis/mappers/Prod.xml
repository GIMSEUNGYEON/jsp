<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">

	<select id="selectTotalRecord" resultType="int" parameterType="kr.or.ddit.common.paging.PaginationInfo">
		SELECT COUNT(*)
		FROM PROD
		<include refid="searchFrag"></include>
	</select>
	<select id="selectProdList" resultType="ProdVO" parameterType="kr.or.ddit.common.paging.PaginationInfo">
		WITH ORDERED AS(
		    SELECT 	
		    	PROD_ID
		        , PROD_NAME
		        , PROD_LGU
		        , PROD_BUYER
		        , PROD_PRICE
		        , PROD_MILEAGE
		    FROM PROD
			<include refid="searchFrag"></include>
		    ORDER BY PROD_LGU, PROD_ID
			), RNUMPROD AS(
		 	   SELECT ORDERED.*, ROWNUM RNUM
		 	   FROM ORDERED
		    )
		    SELECT * 
		    FROM RNUMPROD
		    WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<sql id="searchFrag">
		<trim prefix="WHERE" suffixOverrides="AND">
			<if test="not detailCondition.empty">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
					PROD_LGU = #{detailCondition.prodLgu} AND
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
					PROD_BUYER = #{detailCondition.prodBuyer} AND
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
					INSTR(PROD_NAME, #{detailCondition.prodName}) > 0 AND				
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectProd" resultMap="prodMap" parameterType="string">
		SELECT
			PROD_ID, PROD_NAME, PROD_LGU, PROD_BUYER,
			PROD_COST, PROD_PRICE, PROD_SALE,
			PROD_OUTLINE, PROD_DETAIL, PROD_IMG,
			PROD_TOTALSTOCK, PROD_INSDATE, PROD_PROPERSTOCK,
			PROD_SIZE, PROD_COLOR, PROD_DELIVERY,
			PROD_UNIT, PROD_QTYIN, PROD_QTYSALE,
			PROD_MILEAGE,
			LPROD.LPROD_NM, LPROD.LPROD_GU,
	        BUYER.BUYER_ID, BUYER.BUYER_NAME, BUYER.BUYER_ADD1, BUYER.BUYER_COMTEL, BUYER.BUYER_CHARGER
		FROM
			PROD 
	    INNER JOIN LPROD ON (PROD.PROD_LGU = LPROD.LPROD_GU)
	    INNER JOIN BUYER ON (PROD.PROD_BUYER = BUYER.BUYER_ID)
		WHERE 
			PROD_ID = #{prodId}
	</select>
	
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="lprod" javaType="hashmap" >
			<result property="lprodNm" column="LPROD_NM"/>
			<result property="lprodGu" column="LPROD_GU"/>
		</association>
		<association property="buyer" javaType="BuyerVO" autoMapping="true">
			<id property="buyerId" column="BUYER_ID"/>
		</association>
	</resultMap>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT 
				#{prodLgu} || LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0) + 1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
			INSERT INTO PROD (
			    PROD_ID,
			    PROD_NAME,
			    PROD_LGU,
			    PROD_BUYER,
			    PROD_COST,
			    PROD_PRICE,
			    PROD_SALE,
			    PROD_OUTLINE,
			    PROD_DETAIL,
			    PROD_IMG,
			    PROD_TOTALSTOCK,
			    PROD_INSDATE,
			    PROD_PROPERSTOCK,
			    PROD_SIZE,
			    PROD_COLOR,
			    PROD_DELIVERY,
			    PROD_UNIT,
			    PROD_QTYIN,
			    PROD_QTYSALE,
			    PROD_MILEAGE
			) VALUES (
			 #{prodId}
			 , #{prodName ,jdbcType=VARCHAR}
			 , #{prodLgu ,jdbcType=CHAR}
			 , #{prodBuyer ,jdbcType=CHAR}
			 , #{prodCost ,jdbcType=NUMERIC}
			 , #{prodPrice ,jdbcType=NUMERIC}
			 , #{prodSale ,jdbcType=NUMERIC}
			 , #{prodOutline ,jdbcType=VARCHAR}
			 , #{prodDetail ,jdbcType=CLOB}
			 , #{prodImg ,jdbcType=VARCHAR}
			 , #{prodTotalstock ,jdbcType=NUMERIC}
			 , SYSDATE
			 , #{prodProperstock ,jdbcType=NUMERIC}
			 , #{prodSize ,jdbcType=VARCHAR}
			 , #{prodColor ,jdbcType=VARCHAR}
			 , #{prodDelivery ,jdbcType=VARCHAR}
			 , #{prodUnit ,jdbcType=VARCHAR}
			 , #{prodQtyin ,jdbcType=NUMERIC}
			 , #{prodQtysale ,jdbcType=NUMERIC}
			 , #{prodMileage ,jdbcType=NUMERIC}
			)
	</insert>
	
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		SET
		    PROD_NAME = 	 	#{prodName ,jdbcType=VARCHAR}
		    , PROD_COST = 	 	#{prodCost ,jdbcType=NUMERIC}
		    , PROD_PRICE =   	#{prodPrice ,jdbcType=NUMERIC}
		    , PROD_SALE = 	 	#{prodSale ,jdbcType=NUMERIC}
		    , PROD_OUTLINE = 	#{prodOutline ,jdbcType=VARCHAR}
		    , PROD_DETAIL =  	#{prodDetail ,jdbcType=CLOB}
		    , PROD_IMG = 	 	#{prodImg ,jdbcType=VARCHAR}
		    , PROD_TOTALSTOCK = #{prodTotalstock ,jdbcType=NUMERIC}
		    , PROD_PROPERSTOCK= #{prodProperstock ,jdbcType=NUMERIC}
		    , PROD_SIZE = 		#{prodSize ,jdbcType=VARCHAR}
		    , PROD_COLOR = 		#{prodColor ,jdbcType=VARCHAR}
		    , PROD_DELIVERY = 	#{prodDelivery ,jdbcType=VARCHAR}
		    , PROD_UNIT = 		#{prodUnit ,jdbcType=VARCHAR}
		    , PROD_QTYIN = 		#{prodQtyin ,jdbcType=NUMERIC}
		    , PROD_QTYSALE = 	#{prodQtysale ,jdbcType=NUMERIC}
		    , PROD_MILEAGE = 	#{prodMileage ,jdbcType=NUMERIC}
		WHERE
			PROD_ID =  #{prodId, jdbcType=VARCHAR}
	</update>
</mapper>

